feito:
criação do dashboard inicial - front 
criação telas de registro e login - front
criação das rotas de usuário - back
conectar ao banco de dados - back
conectar front ao back - feito
autenticação do usuário - axios e usercontext para gerenciamento do estado do usuário
usando cors para conectar o front ao back + token para autenticar 
persistencia de autenticação do usuário, por meio do armazenamento do token JWT no localStorage ou cookies
Context API: Criar contextos para despesas e receitas no frontend, facilitando o gerenciamento do estado em toda a aplicação.
Criar formulários e interfaces para gerenciar os dados do cartão de crédito no frontend e conectar isso às rotas do backend.
Criar a interface para o usuário inserir, visualizar e gerenciar despesas e receitas. Conectar isso com as rotas do backend.
Formatar para real
Criar rotas para adicionar, editar, listar e deletar valores de cartão de crédito 
Criar rotas para adicionar, listar, editar e deletar despesas e receitas 
Trabalhar com regex para trabalhar com vírgula (valor financeiro)
Segurança JWT: Garantir que todas as rotas protegidas do backend exijam autenticação usando JWT.
Deploy: Preparar o frontend e o backend para deploy.

backlog:
Filtros e visualizações: Criar filtros para que o usuário visualize despesas e receitas por categoria, período, etc.
Testes: Realizar testes manuais ou automatizados para garantir que todas as rotas, tanto do frontend quanto do backend, estejam funcionando corretamente.
